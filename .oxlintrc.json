{
  "$schema": "./node_modules/oxlint/configuration_schema.json",
  "ignorePatterns": ["/node_modules", "/dist", "/*.{js,ts}"],
  "plugins": ["eslint", "oxc", "typescript", "import", "promise", "unicorn"],
  "categories": {
    "correctness": "error",
    "nursery": "error",
    "pedantic": "error",
    "perf": "error",
    "restriction": "error",
    "style": "error",
    "suspicious": "error"
  },
  "rules": {
    "eslint/curly": "off",
    "eslint/func-style": ["error", "declaration"],
    "eslint/id-length": "off",
    "eslint/no-console": "off",
    "eslint/no-magic-numbers": "off",
    "eslint/no-restricted-imports": ["error", { "patterns": ["~/*", "@/*"] }],
    "eslint/no-ternary": "off",
    "eslint/no-undefined": "off",
    "eslint/no-void": "off",
    "eslint/sort-imports": "off",
    "eslint/sort-keys": "off",

    "import/consistent-type-specifier-style": "off",
    "import/exports-last": "off",
    "import/group-exports": "off",
    "import/max-dependencies": "off",
    "import/no-mutable-exports": "off",
    "import/no-unassigned-import": ["error", { "allow": ["**/*.css"] }],
    "import/prefer-default-export": "off",
    "import/unambiguous": "off",

    "oxc/no-async-await": "off",
    "oxc/no-optional-chaining": "off",
    "oxc/no-rest-spread-properties": "off",

    "typescript/array-type": ["error", { "default": "array-simple" }],
    "typescript/no-unsafe-type-assertion": "off",

    "unicorn/filename-case": "off",
    "unicorn/no-abusive-eslint-disable": "off",
    "unicorn/no-array-for-each": "off",
    "unicorn/no-array-reduce": "off",
    "unicorn/no-null": "off",
    "unicorn/no-useless-undefined": "off"
  },
  "overrides": [
    {
      "files": ["**/*.svelte", "**/*.svelte.ts"],
      "globals": {
        "$derived": "readonly",
        "$state": "readonly"
      }
    },
    {
      "files": ["**/*.svelte"],
      "globals": {
        "$effect": "readonly",
        "$props": "readonly"
      },
      "rules": {
        // OxLint doesn't evaluate the HTML portion of Svelte files (yet).
        // As a result, a couple of linting rules won't work.

        // Variables defined in the TS portion, but set (using bind:this) in
        // the HTML portion will seen as unassigned
        "eslint/no-unassigned-vars": "off",

        // When an imported component is used as a type specifier in the TS
        // portion, OxLint throws the following error:
        // "All imports in the declaration are only used as types. Use `import type`."
        "typescript/consistent-type-imports": "off"
      }
    }
  ],
  "env": {
    "builtin": true,
    "browser": true
  }
}
